{"id":"../../node_modules/pstree.remy/lib/utils.js","dependencies":[{"name":"/Users/ndmt1at21/Desktop/Web/package.json","includedInParent":true,"mtime":1607009905964},{"name":"/Users/ndmt1at21/Desktop/Web/node_modules/pstree.remy/package.json","includedInParent":true,"mtime":1606867614433},{"name":"child_process","loc":{"line":1,"column":22},"parent":"/Users/ndmt1at21/Desktop/Web/node_modules/pstree.remy/lib/utils.js","resolved":"/Users/ndmt1at21/Desktop/Web/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"const spawn = require('child_process').spawn;\n\nmodule.exports = { tree, pidsForTree, getStat };\n\nfunction getStat() {\n  return new Promise((resolve) => {\n    const command = `ls /proc | grep -E '^[0-9]+$' | xargs -I{} cat /proc/{}/stat`;\n    const spawned = spawn('sh', ['-c', command], {\n      stdio: ['pipe', 'pipe', 'pipe'],\n    });\n\n    var res = '';\n    spawned.stdout.on('data', (data) => (res += data));\n    spawned.on('close', () => resolve(res));\n  });\n}\n\nfunction template(s) {\n  var stat = null;\n  // 'pid', 'comm', 'state', 'ppid', 'pgrp'\n  // %d     (%s)    %c       %d      %d\n  s.replace(\n    /(\\d+) \\((.*?)\\)\\s(.+?)\\s(\\d+)\\s/g,\n    (all, PID, COMMAND, STAT, PPID) => {\n      stat = { PID, COMMAND, PPID, STAT };\n    }\n  );\n\n  return stat;\n}\n\nfunction tree(stats) {\n  const processes = stats.split('\\n').map(template).filter(Boolean);\n\n  return processes;\n}\n\nfunction pidsForTree(tree, pid) {\n  if (typeof pid === 'number') {\n    pid = pid.toString();\n  }\n  const parents = [pid];\n  const pids = [];\n\n  tree.forEach((proc) => {\n    if (parents.indexOf(proc.PPID) !== -1) {\n      parents.push(proc.PID);\n      pids.push(proc);\n    }\n  });\n\n  return pids;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/pstree.remy/lib/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../../node_modules/pstree.remy/lib/utils.js":"const spawn = require('child_process').spawn;\n\nmodule.exports = { tree, pidsForTree, getStat };\n\nfunction getStat() {\n  return new Promise((resolve) => {\n    const command = `ls /proc | grep -E '^[0-9]+$' | xargs -I{} cat /proc/{}/stat`;\n    const spawned = spawn('sh', ['-c', command], {\n      stdio: ['pipe', 'pipe', 'pipe'],\n    });\n\n    var res = '';\n    spawned.stdout.on('data', (data) => (res += data));\n    spawned.on('close', () => resolve(res));\n  });\n}\n\nfunction template(s) {\n  var stat = null;\n  // 'pid', 'comm', 'state', 'ppid', 'pgrp'\n  // %d     (%s)    %c       %d      %d\n  s.replace(\n    /(\\d+) \\((.*?)\\)\\s(.+?)\\s(\\d+)\\s/g,\n    (all, PID, COMMAND, STAT, PPID) => {\n      stat = { PID, COMMAND, PPID, STAT };\n    }\n  );\n\n  return stat;\n}\n\nfunction tree(stats) {\n  const processes = stats.split('\\n').map(template).filter(Boolean);\n\n  return processes;\n}\n\nfunction pidsForTree(tree, pid) {\n  if (typeof pid === 'number') {\n    pid = pid.toString();\n  }\n  const parents = [pid];\n  const pids = [];\n\n  tree.forEach((proc) => {\n    if (parents.indexOf(proc.PPID) !== -1) {\n      parents.push(proc.PID);\n      pids.push(proc);\n    }\n  });\n\n  return pids;\n}\n"},"lineCount":54}},"error":null,"hash":"0e4caf3f991e4069857e747ac91b7a52","cacheData":{"env":{}}}